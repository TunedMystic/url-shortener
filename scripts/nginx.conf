worker_processes  1;
daemon on;
pid /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    sendfile off;
    keepalive_timeout  65;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /app/logs/nginx-access.log;
    error_log /app/logs/nginx-error.log;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    # tells the server to use on-the-fly gzip compression.


    upstream app_servers {
      # fail_timeout=0 means we always retry an upstream even if it failed
      # to return a good HTTP response (in case the Unicorn master nukes a
      # single worker for timing out).

      server 0.0.0.0:8000 fail_timeout=0;
    }

    server {

        listen   80;
        server_name example.com;

        client_max_body_size 4G;

        # access_log /webapps/hello_django/logs/nginx-access.log;
        # error_log /webapps/hello_django/logs/nginx-error.log;
     
        location /static/ {
            alias   /app/static/;
        }
        
        location /media/ {
            alias   /app/media/;
        }

        location / {
            # an HTTP header important enough to have its own Wikipedia entry:
            #   http://en.wikipedia.org/wiki/X-Forwarded-For
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # enable this if and only if you use HTTPS, this helps Rack
            # set the proper protocol for doing redirects:
            # proxy_set_header X-Forwarded-Proto https;

            # pass the Host: header from the client right along so redirects
            # can be set properly within the Rack application
            proxy_set_header Host $http_host;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;

            # set "proxy_buffering off" *only* for Rainbows! when doing
            # Comet/long-poll stuff.  It's also safe to set if you're
            # using only serving fast clients with Unicorn + nginx.
            # Otherwise you _want_ nginx to buffer responses to slow
            # clients, really.
            # proxy_buffering off;

            # Try to serve static files from nginx, no point in making an
            # *application* server like Unicorn/Rainbows! serve static files.
            if (!-f $request_filename) {
                proxy_pass http://app_servers;
                break;
            }
        }

        # Error pages
        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /app/static/;
        }
    }

}